generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  role         Role
  username     String        @unique
  email        String        @unique
  password     String
  firstName    String
  lastName     String
  fiscalCode   String        @unique
  address      String
  postalCode   String
  city         String
  createdAt    DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
  interactions Interaction[]
  matches      Match[]
}

model Description {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  details   Json
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz(6)
  cats      Cat[]
}

model Cat {
  id            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String
  age           Int?
  descriptionId String        @db.Uuid
  photoUrl      String?
  createdAt     DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime      @default(now()) @updatedAt @db.Timestamptz(6)
  description   Description   @relation(fields: [descriptionId], references: [id], onDelete: Cascade)
  interactions  Interaction[]
  matches       Match[]
}

model Match {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  catId     String   @db.Uuid
  userId    String   @db.Uuid
  date      DateTime @default(now()) @db.Timestamptz(6)
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz(6)
  cat       Cat      @relation(fields: [catId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Interaction {
  id        String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  catId     String          @db.Uuid
  userId    String          @db.Uuid
  type      InteractionType
  date      DateTime        @default(now()) @db.Timestamptz(6)
  createdAt DateTime        @default(now()) @db.Timestamptz(6)
  updatedAt DateTime        @default(now()) @updatedAt @db.Timestamptz(6)
  cat       Cat             @relation(fields: [catId], references: [id], onDelete: Cascade)
  user      User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  user
  owner
}

enum InteractionType {
  like
  dislike
}
